{"ast":null,"code":"var _jsxFileName = \"/Users/NiniD/Documents/PROJECT_WEB_OCRES/frontend/src/components/Musique/Musique.js\";\nimport React from 'react';\nimport './Musique.css';\nimport axios from 'axios'; //URL API\n\nconst API_URL = \"https://cors-anywhere.herokuapp.com/https://api.deezer.com/chart/tracks\";\n\nclass Musique extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      songs: null\n    };\n  }\n\n  fetchMusic() {\n    axios.get(\"\".concat(API_URL), {\n      crossdomain: true\n    }).then(({\n      data\n    }) => {\n      console.log(data);\n      const songs = [data.tracks.data[0].title, data.tracks.data[1].title, data.tracks.data[2].title, data.tracks.data[3].title, data.tracks.data[4].title, data.tracks.data[5].title];\n      this.setState({\n        songs\n      });\n    }).catch(console.error);\n  } // Lance un appel au lancement du component\n\n\n  componentDidMount() {\n    const title = this.props.title;\n    this.fetchMusic(title);\n  } // A chaque update relance une api\n\n\n  componentDidUpdate(nextProps) {\n    // Ici on verifie que la mise à jour concerne bien le champs city\n    if (nextProps.title !== this.props.title) {\n      this.fetchMusic(nextProps.title);\n    }\n  }\n\n  render() {\n    const songs = this.state.songs;\n    const title = this.props.title;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, title);\n  }\n\n}\n\nexport default Musique;","map":{"version":3,"sources":["/Users/NiniD/Documents/PROJECT_WEB_OCRES/frontend/src/components/Musique/Musique.js"],"names":["React","axios","API_URL","Musique","Component","constructor","props","state","songs","fetchMusic","get","crossdomain","then","data","console","log","tracks","title","setState","catch","error","componentDidMount","componentDidUpdate","nextProps","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,MAAMC,OAAO,GAAG,yEAAhB;;AAEA,MAAMC,OAAN,SAAsBH,KAAK,CAACI,SAA5B,CAAqC;AAEnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,KAAK,EAAG;AADI,KAAb;AAGF;;AAEFC,EAAAA,UAAU,GAAG;AACTR,IAAAA,KAAK,CACFS,GADH,WACUR,OADV,GACqB;AAACS,MAAAA,WAAW,EAAE;AAAd,KADrB,EAEGC,IAFH,CAEQ,CAAC;AAACC,MAAAA;AAAD,KAAD,KAAU;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEA,YAAML,KAAK,GAAG,CAACK,IAAI,CAACG,MAAL,CAAYH,IAAZ,CAAiB,CAAjB,EAAoBI,KAArB,EAA4BJ,IAAI,CAACG,MAAL,CAAYH,IAAZ,CAAiB,CAAjB,EAAoBI,KAAhD,EAAuDJ,IAAI,CAACG,MAAL,CAAYH,IAAZ,CAAiB,CAAjB,EAAoBI,KAA3E,EAAkFJ,IAAI,CAACG,MAAL,CAAYH,IAAZ,CAAiB,CAAjB,EAAoBI,KAAtG,EAA4GJ,IAAI,CAACG,MAAL,CAAYH,IAAZ,CAAiB,CAAjB,EAAoBI,KAAhI,EAAuIJ,IAAI,CAACG,MAAL,CAAYH,IAAZ,CAAiB,CAAjB,EAAoBI,KAA3J,CAAd;AAEA,WAAKC,QAAL,CAAc;AAACV,QAAAA;AAAD,OAAd;AACA,KARH,EASGW,KATH,CASSL,OAAO,CAACM,KATjB;AAUF,GApBiC,CAsBhC;;;AACHC,EAAAA,iBAAiB,GAAG;AAAA,UACVJ,KADU,GACA,KAAKX,KADL,CACVW,KADU;AAElB,SAAKR,UAAL,CAAgBQ,KAAhB;AACD,GA1BkC,CA4BjC;;;AACFK,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B;AACA,QAAIA,SAAS,CAACN,KAAV,KAAoB,KAAKX,KAAL,CAAWW,KAAnC,EAA0C;AACxC,WAAKR,UAAL,CAAgBc,SAAS,CAACN,KAA1B;AACD;AACF;;AAEAO,EAAAA,MAAM,GAAE;AAAA,UACChB,KADD,GACW,KAAKD,KADhB,CACCC,KADD;AAAA,UAECS,KAFD,GAEW,KAAKX,KAFhB,CAECW,KAFD;AAGP,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEA,KADF,CADD;AAIA;;AA3CiC;;AAkDrC,eAAed,OAAf","sourcesContent":["import React from 'react';\nimport './Musique.css';\nimport axios from 'axios';\n\n//URL API\nconst API_URL = \"https://cors-anywhere.herokuapp.com/https://api.deezer.com/chart/tracks\"\n\nclass Musique extends React.Component{\n\n  constructor(props) {\n      super(props);\n      this.state = {\n      \tsongs : null\n      }\n   }\n\n  fetchMusic() {\n      axios\n        .get(`${API_URL}`, {crossdomain: true})\n        .then(({data})=>{\n        \tconsole.log(data);\n\n        \tconst songs = [data.tracks.data[0].title, data.tracks.data[1].title, data.tracks.data[2].title, data.tracks.data[3].title,data.tracks.data[4].title, data.tracks.data[5].title];\n\n        \tthis.setState({songs});\n        })\n        .catch(console.error);\n   }\n\n     // Lance un appel au lancement du component\n  componentDidMount() {\n    const { title } = this.props;\n    this.fetchMusic(title);\n  }\n\n    // A chaque update relance une api\n  componentDidUpdate(nextProps) {\n    // Ici on verifie que la mise à jour concerne bien le champs city\n    if (nextProps.title !== this.props.title) {\n      this.fetchMusic(nextProps.title);\n    }\n  }\n\n   render(){\n   \tconst { songs } = this.state;\n    const { title } = this.props;\n   \treturn(\n   \t\t<div>\n   \t\t\t{title}\n   \t\t</div>)\n   }\n\n\n\n\n}\n\nexport default Musique;"]},"metadata":{},"sourceType":"module"}